// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BCMapBox.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace BCMapBox {
  public static partial class BCMap
  {
    static readonly string __ServiceName = "BCMapBox.BCMap";

    static readonly grpc::Marshaller<global::BCMapBox.MapRequestToken> __Marshaller_MapRequestToken = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestToken.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapReply> __Marshaller_MapReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestDatasetId> __Marshaller_MapRequestDatasetId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestDatasetId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestTilesetId> __Marshaller_MapRequestTilesetId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestTilesetId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestGlobeStyle> __Marshaller_MapRequestGlobeStyle = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestGlobeStyle.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestFeature> __Marshaller_MapRequestFeature = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestFeature.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestGlobeId> __Marshaller_MapRequestGlobeId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestGlobeId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::BCMapBox.MapRequestFeatureId> __Marshaller_MapRequestFeatureId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::BCMapBox.MapRequestFeatureId.Parser.ParseFrom);

    static readonly grpc::Method<global::BCMapBox.MapRequestToken, global::BCMapBox.MapReply> __Method_TransToken = new grpc::Method<global::BCMapBox.MapRequestToken, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransToken",
        __Marshaller_MapRequestToken,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestDatasetId, global::BCMapBox.MapReply> __Method_TransDataSetId = new grpc::Method<global::BCMapBox.MapRequestDatasetId, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransDataSetId",
        __Marshaller_MapRequestDatasetId,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestTilesetId, global::BCMapBox.MapReply> __Method_TransTilesetId = new grpc::Method<global::BCMapBox.MapRequestTilesetId, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransTilesetId",
        __Marshaller_MapRequestTilesetId,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestGlobeStyle, global::BCMapBox.MapReply> __Method_TransGlobeStyle = new grpc::Method<global::BCMapBox.MapRequestGlobeStyle, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransGlobeStyle",
        __Marshaller_MapRequestGlobeStyle,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestFeature, global::BCMapBox.MapReply> __Method_TransFeature = new grpc::Method<global::BCMapBox.MapRequestFeature, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransFeature",
        __Marshaller_MapRequestFeature,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestGlobeId, global::BCMapBox.MapReply> __Method_TransGlobeId = new grpc::Method<global::BCMapBox.MapRequestGlobeId, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransGlobeId",
        __Marshaller_MapRequestGlobeId,
        __Marshaller_MapReply);

    static readonly grpc::Method<global::BCMapBox.MapRequestFeatureId, global::BCMapBox.MapReply> __Method_TransFeatureId = new grpc::Method<global::BCMapBox.MapRequestFeatureId, global::BCMapBox.MapReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransFeatureId",
        __Marshaller_MapRequestFeatureId,
        __Marshaller_MapReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BCMapBox.BCMapBoxReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BCMap</summary>
    public abstract partial class BCMapBase
    {
      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransToken(global::BCMapBox.MapRequestToken request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransDataSetId(global::BCMapBox.MapRequestDatasetId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransTilesetId(global::BCMapBox.MapRequestTilesetId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransGlobeStyle(global::BCMapBox.MapRequestGlobeStyle request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransFeature(global::BCMapBox.MapRequestFeature request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransGlobeId(global::BCMapBox.MapRequestGlobeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::BCMapBox.MapReply> TransFeatureId(global::BCMapBox.MapRequestFeatureId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BCMap</summary>
    public partial class BCMapClient : grpc::ClientBase<BCMapClient>
    {
      /// <summary>Creates a new client for BCMap</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BCMapClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BCMap that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BCMapClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BCMapClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BCMapClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::BCMapBox.MapReply TransToken(global::BCMapBox.MapRequestToken request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransToken(global::BCMapBox.MapRequestToken request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransToken, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransTokenAsync(global::BCMapBox.MapRequestToken request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransTokenAsync(global::BCMapBox.MapRequestToken request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransToken, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransDataSetId(global::BCMapBox.MapRequestDatasetId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransDataSetId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransDataSetId(global::BCMapBox.MapRequestDatasetId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransDataSetId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransDataSetIdAsync(global::BCMapBox.MapRequestDatasetId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransDataSetIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransDataSetIdAsync(global::BCMapBox.MapRequestDatasetId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransDataSetId, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransTilesetId(global::BCMapBox.MapRequestTilesetId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransTilesetId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransTilesetId(global::BCMapBox.MapRequestTilesetId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransTilesetId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransTilesetIdAsync(global::BCMapBox.MapRequestTilesetId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransTilesetIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransTilesetIdAsync(global::BCMapBox.MapRequestTilesetId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransTilesetId, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransGlobeStyle(global::BCMapBox.MapRequestGlobeStyle request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransGlobeStyle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransGlobeStyle(global::BCMapBox.MapRequestGlobeStyle request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransGlobeStyle, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransGlobeStyleAsync(global::BCMapBox.MapRequestGlobeStyle request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransGlobeStyleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransGlobeStyleAsync(global::BCMapBox.MapRequestGlobeStyle request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransGlobeStyle, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransFeature(global::BCMapBox.MapRequestFeature request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransFeature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransFeature(global::BCMapBox.MapRequestFeature request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransFeature, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransFeatureAsync(global::BCMapBox.MapRequestFeature request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransFeatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransFeatureAsync(global::BCMapBox.MapRequestFeature request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransFeature, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransGlobeId(global::BCMapBox.MapRequestGlobeId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransGlobeId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransGlobeId(global::BCMapBox.MapRequestGlobeId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransGlobeId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransGlobeIdAsync(global::BCMapBox.MapRequestGlobeId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransGlobeIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransGlobeIdAsync(global::BCMapBox.MapRequestGlobeId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransGlobeId, null, options, request);
      }
      public virtual global::BCMapBox.MapReply TransFeatureId(global::BCMapBox.MapRequestFeatureId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransFeatureId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BCMapBox.MapReply TransFeatureId(global::BCMapBox.MapRequestFeatureId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransFeatureId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransFeatureIdAsync(global::BCMapBox.MapRequestFeatureId request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransFeatureIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BCMapBox.MapReply> TransFeatureIdAsync(global::BCMapBox.MapRequestFeatureId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransFeatureId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BCMapClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BCMapClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BCMapBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TransToken, serviceImpl.TransToken)
          .AddMethod(__Method_TransDataSetId, serviceImpl.TransDataSetId)
          .AddMethod(__Method_TransTilesetId, serviceImpl.TransTilesetId)
          .AddMethod(__Method_TransGlobeStyle, serviceImpl.TransGlobeStyle)
          .AddMethod(__Method_TransFeature, serviceImpl.TransFeature)
          .AddMethod(__Method_TransGlobeId, serviceImpl.TransGlobeId)
          .AddMethod(__Method_TransFeatureId, serviceImpl.TransFeatureId).Build();
    }

  }
}
#endregion
